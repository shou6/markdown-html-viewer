{"version":3,"sources":["../src/markdown-html-viewer.js"],"names":[],"mappings":"AAAA;;;;;;AAEA,MAAM,WAAW,QAAQ,UAAR,CAAjB;AACA,MAAM,YAAY,IAAI,SAAS,SAAb,EAAlB;;AAEA,OAAO,OAAP,GAAiB;AACT,SAAN,CAAc,IAAd,EAAoB,OAAO,IAA3B,EAAiC;AAAA;AAC/B,aAAO;AAAA,qCAAY,WAAO,OAAP,EAAgB,MAAhB,EAA2B;AAC5C,cAAI;AACF,kBAAM,UAAU,IAAI,cAAJ,EAAhB;AACA,kBAAM,QAAQ,IAAR,CAAa,KAAb,EAAoB,IAApB,EAA0B,KAA1B,CAAN;AACA,kBAAM,QAAQ,IAAR,EAAN;AACA,gBAAI,SAAS,MAAb,EAAqB;AACnB,oBAAM,WAAW,UAAU,QAAV,CAAmB,QAAQ,YAA3B,CAAjB;AACA,sBAAQ,QAAR;AACD,aAHD,MAGO;AACL,sBAAQ,QAAQ,YAAhB;AACD;AACF,WAVD,CAUE,OAAO,KAAP,EAAc;AACd,mBAAO,KAAP;AACD;AACF,SAdM;;AAAA;AAAA;AAAA;AAAA,WAAP;AAD+B;AAgBhC;AAjBc,CAAjB","file":"markdown-html-viewer.js","sourcesContent":["\"use strict\"\n\nconst showdown = require(\"showdown\")\nconst converter = new showdown.Converter()\n\nmodule.exports = {\n  async convert(path, type = null) {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const xmlhttp = new XMLHttpRequest()\n        await xmlhttp.open(\"get\", path, false)\n        await xmlhttp.send()\n        if (type === \"html\") {\n          const markdown = converter.makeHtml(xmlhttp.responseText)\n          resolve(markdown)\n        } else {\n          resolve(xmlhttp.responseText)\n        }\n      } catch (error) {\n        reject(error)\n      }\n    })\n  }\n}\n"]}